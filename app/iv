#!@PYTHON@
#------------------------------
import os
import sys
from optparse import OptionParser
from PyQt4 import QtGui
from graphqt.Logger import log
from graphqt.IMVMain import IMVMain

#from expmon.PSQThreadWorker import PSQThreadWorker
#------------------------------

class IMAGE_VIEWER :
    def __init__(self, parser) :
        """Image Viever (imvi)"""

        self.parser = parser
        (opts, args) = parser.parse_args()
        self.args = args
        self.opts = vars(opts)
        self.defs = vars(parser.get_default_values())

        self.verbos = opts.verbos
        #if self.verbos : self.print_raw()
        if self.verbos : self.print_pars()

        app = QtGui.QApplication(sys.argv)

        #t1 = PSQThreadWorker(cp, parent=None, dt_msec=5000, pbits=0) #0177777)
        #t1.start()

        w = IMVMain(parser)
        #w = QtGui.QWidget()

        w.show()
	stat = app.exec_()

	#statt1 = t1.quit() # t1.exit(0)
        sys.exit(0)

#------------------------------

    def print_raw(self) :
        print 'Command:', ' '.join(sys.argv)
        print '  opts: ', self.opts
        print '  defs: ', self.defs
        print '  args: ', self.args

#------------------------------

    def print_pars(self) :
        """Prints input parameters"""
        print 'Command:', ' '.join(sys.argv)+\
              '\nStart %s' % self.__init__.__doc__+\
              '\nwith argument %s and optional parameters:\n' % str(self.args)+\
              '<key>      <value>          <default>'
        for k,v in self.opts.items() :
            print '%s %s %s' % (k.ljust(10), str(v).ljust(16), str(self.defs[k]).ljust(16))

#------------------------------

    def dsname(self) :
        """Returns dsname retrieved from input parameters, e.g.'exp=mfxn8316:run=11' """
        exp = self.opts['exp']
        run = self.opts['run']
        return 'exp=%s:run=%s' % (exp, run)

#------------------------------

def usage() :
    return '\n\nCommand to launch Monitoring Tool GUI:\n'+\
           '\n  %prog'+\
           ' -e <experiment> -r <run-number> -v'+\
           '\n\n  Examples:'+\
           '\n  %prog -e mfxn8316 -r 11'+\
           '\n  %prog -e mfxn8316 -r 11 -v'
 
#------------------------------

def input_option_parser() :

    exp_def    = 'mfxn8316' 
    run_def    = 1
    verbos_def = True

    h_exp    = 'experiment, e.g., cxi43210, default = %s' % exp_def
    h_run    = 'run number, default = %d' % run_def
    h_verbos = 'verbosity, default = %s' % str(verbos_def)

    parser = OptionParser(description='Command line parameters', usage ='usage: %prog <opts>' + usage())
    parser.add_option('-e', '--exp',    default=exp_def,    action='store', type='string', help=h_exp)
    parser.add_option('-r', '--run',    default=run_def,    action='store', type='int',    help=h_run)
    parser.add_option('-v', '--verbos', default=verbos_def, action='store_false',          help=h_verbos)
 
    return parser #, parser.parse_args()

#------------------------------

if __name__ == "__main__" :

    log.setPrintBits(0377) 

    proc_name = os.path.basename(sys.argv[0])

    parser = input_option_parser()

    #if len(sys.argv)==1 :
        #parser.print_help()
        #msg = '\nWARNING: run this command with parameters, e.g.: %s -h' % proc_name
        #sys.exit ('%s\nEnd of %s' % (msg, proc_name))

    IMAGE_VIEWER(parser)

    sys.exit(0)

#------------------------------
